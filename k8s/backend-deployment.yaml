apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: satomichi
  labels:
    app: backend
    tags.datadoghq.com/service: "search-backend"
    tags.datadoghq.com/env: "production"
    tags.datadoghq.com/version: "1.0.0"
spec:
  replicas: 2
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
        tags.datadoghq.com/service: "search-backend"
        tags.datadoghq.com/env: "production"
        tags.datadoghq.com/version: "1.0.0"
      annotations:
        ad.datadoghq.com/backend.logs: '[{"source":"python","service":"search-backend","log_processing_rules":[{"type":"multi_line","name":"log_start_with_date","pattern":"\\d{4}-\\d{2}-\\d{2}"}]}]'
    spec:
      imagePullSecrets:
      - name: ghcr-secret
      containers:
      - name: backend
        image: ghcr.io/satomichi/observability_practice-backend:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8000
        env:
        - name: PYTHONUNBUFFERED
          value: "1"
        - name: DD_SERVICE
          value: "search-backend"
        - name: DD_ENV
          value: "production"
        - name: DD_VERSION
          value: "1.0.0"
        - name: DD_LOGS_INJECTION
          value: "true"
        # OpenTelemetry設定
        - name: OTEL_SERVICE_NAME
          value: "search-backend"
        - name: OTEL_RESOURCE_ATTRIBUTES
          value: "service.name=search-backend,service.version=1.0.0,deployment.environment=production"
        - name: DD_TRACE_ENABLED
          value: "true"
        - name: DD_TRACE_AGENT_URL
          value: "http://datadog-agent.monitoring.svc.cluster.local:8126"
        # DatadogとOpenTelemetryの統合
        - name: DD_OTLP_CONFIG_RECEIVER_PROTOCOLS_GRPC_ENDPOINT
          value: "0.0.0.0:4317"
        - name: DD_OTLP_CONFIG_RECEIVER_PROTOCOLS_HTTP_ENDPOINT
          value: "0.0.0.0:4318"
        readinessProbe:
          httpGet:
            path: /books
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /books
            port: 8000
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "500m"
---
apiVersion: v1
kind: Service
metadata:
  name: backend-service
  namespace: satomichi
  labels:
    app: backend
    tags.datadoghq.com/service: "search-backend"
    tags.datadoghq.com/env: "production"
    tags.datadoghq.com/version: "1.0.0"
spec:
  selector:
    app: backend
  ports:
  - port: 8000
    targetPort: 8000
    protocol: TCP
  type: ClusterIP 
