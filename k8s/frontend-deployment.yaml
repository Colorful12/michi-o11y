apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: satomichi
  labels:
    app: frontend
    tags.datadoghq.com/service: "search-frontend"
    tags.datadoghq.com/env: "production"
    tags.datadoghq.com/version: "1.0.0"
spec:
  replicas: 2
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
        tags.datadoghq.com/service: "search-frontend"
        tags.datadoghq.com/env: "production"
        tags.datadoghq.com/version: "1.0.0"
      annotations:
        ad.datadoghq.com/frontend.logs: '[{"source":"nginx","service":"search-frontend"}]'
    spec:
      imagePullSecrets:
      - name: ghcr-secret
      containers:
      - name: frontend
        image: ghcr.io/satomichi/observability_practice-frontend:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 80
        env:
        - name: DD_SERVICE
          value: "search-frontend"
        - name: DD_ENV
          value: "production"
        - name: DD_VERSION
          value: "1.0.0"
        # OpenTelemetry設定
        - name: OTEL_SERVICE_NAME
          value: "search-frontend"
        - name: OTEL_RESOURCE_ATTRIBUTES
          value: "service.name=search-frontend,service.version=1.0.0,deployment.environment=production"
        # Datadog RUM設定 (実際の値に置き換える必要があります)
        - name: VITE_DD_APPLICATION_ID
          value: "test-app-id-k8s"  # テスト用：実際のDatadog Application IDに置き換えてください
        - name: VITE_DD_CLIENT_TOKEN
          value: "test-client-token-k8s"   # テスト用：実際のDatadog Client Tokenに置き換えてください
        - name: VITE_DD_SITE
          value: "datadoghq.com"
        - name: VITE_DD_SERVICE
          value: "search-frontend"
        - name: VITE_DD_ENV
          value: "production"
        - name: VITE_DD_VERSION
          value: "1.0.0"
        - name: VITE_DD_SAMPLE_RATE
          value: "100"
        readinessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        resources:
          requests:
            memory: "64Mi"
            cpu: "100m"
          limits:
            memory: "128Mi"
            cpu: "200m"
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
  namespace: satomichi
  labels:
    app: frontend
    tags.datadoghq.com/service: "search-frontend"
    tags.datadoghq.com/env: "production"
    tags.datadoghq.com/version: "1.0.0"
spec:
  selector:
    app: frontend
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
  type: ClusterIP 
